
variables:
  pytorch.build.version: 1.0
  pytorch.build.number: 1
  pytorch.branch: master # override the default of build.version
  pytorch.repo: pytorch
  build.linux.enabled: false
  build.cpu.enabled: true
  build.cuda.enabled: true
  build.wheels.enabled: true
  build.conda.enabled: true
  use.sccache.cpu: 0
  use.sccache.cuda: 1
  self.hosted.agent.cpu: false
  self.hosted.agent.cuda: true

jobs:
- job: 'Windows_CPU_Wheels_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(eq(variables['build.cpu.enabled'], 'true'), eq(variables['build.wheels.enabled'], 'true'))
  variables:
    PACKAGE: wheels
    CUDA_VERSION: cpu
    USE_SCCACHE: $(use.sccache.cpu)
  strategy:
    maxParallel: 10
    matrix:
      PY3.7:
        DESIRED_PYTHON: 3.7

  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - script: 'call windows/build_pytorch.bat %CUDA_VERSION% %PYTORCH_BUILD_VERSION% %PYTORCH_BUILD_NUMBER%'
    displayName: Build
    env:
      MAX_JOBS: 2

  - task: PublishTestResults@2 # No test results to publish
    inputs:
      testResultsFiles: 'windows/pytorch/test/**/*.xml'
      testRunTitle: 'Publish test results'
    enabled: false

  - task: AmazonWebServices.aws-vsts-tools.S3Upload.S3Upload@1
    displayName: 'Upload artifacts to S3'
    inputs:
      awsCredentials: 'Pytorch S3 bucket'
      bucketName: 'pytorch'
      sourceFolder: 'windows/output/cpu'
      globExpressions: '*.whl'
      targetFolder: 's3://pytorch/whl/nightly/cpu/'
      fileAcl: 'public read'
      flattenFolders: 'true'
